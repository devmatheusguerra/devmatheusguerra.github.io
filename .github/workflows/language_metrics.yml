name: Generate Language Metrics

on:
  schedule:
    - cron: '*/5 * * * *'  # Executa a cada 5 minutos
  workflow_dispatch:  # Permite execução manual

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Ou outra versão que você prefira

      - name: Install requests
        run: pip install requests

      - name: Create and run script
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        run: |
          mkdir -p resources
          echo 'import requests' > script.py
          echo 'import json' >> script.py
          echo '' >> script.py
          echo 'username = "devmatheusguerra"' >> script.py
          echo 'token = "${{ secrets.PERSONAL_GITHUB_TOKEN }}"' >> script.py
          echo 'headers = {"Authorization": f"token {token}"}' >> script.py
          echo '' >> script.py
          echo 'ignored_languages = ["Jupyter Notebook", "HTML", "TeX", "CSS"]' >> script.py
          echo '' >> script.py
          echo 'repos_url = f"https://api.github.com/users/{username}/repos"' >> script.py
          echo 'repos = requests.get(repos_url, headers=headers).json()' >> script.py
          echo '' >> script.py
          echo 'language_count = {}' >> script.py
          echo '' >> script.py
          echo 'for repo in repos:' >> script.py
          echo '    languages_url = repo["languages_url"]' >> script.py
          echo '    languages = requests.get(languages_url, headers=headers).json()' >> script.py
          echo '' >> script.py
          echo '    for language, count in languages.items():' >> script.py
          echo '        if language not in ignored_languages:' >> script.py
          echo '            if language in language_count:' >> script.py
          echo '                language_count[language] += count' >> script.py
          echo '            else:' >> script.py
          echo '                language_count[language] = count' >> script.py
          echo '' >> script.py
          echo 'total = sum(language_count.values())' >> script.py
          echo 'language_percentages = {lang: (count / total) * 100 for lang, count in language_count.items()}' >> script.py
          echo '' >> script.py
          echo '# Salvar os resultados em um arquivo JSON' >> script.py
          echo 'with open("resources/code_metrics.json", "w") as json_file:' >> script.py
          echo '    json.dump(language_percentages, json_file, indent=4)' >> script.py
          echo '' >> script.py
          echo 'print(language_percentages)' >> script.py

          python script.py

      - name: List resources
        run: ls -l resources

      - name: Commit and push results
        run: |
          git config --local user.email "${{ secrets.PERSONAL_GITHUB_EMAIL }}"
          git config --local user.name "${{ secrets.PERSONAL_GITHUB_NAME }}"
          git add resources/code_metrics.json
          git commit -m "Add code metrics JSON"
          git push origin main  # Ou o branch que você está usando
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}